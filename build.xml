<?xml version="1.0" encoding="UTF-8"?>
<!-- Project ROOT  -->
<project name="okuyama" default="compile" basedir=".">
	<property name="project.title"  value="okuyama" />
	<property name="doc.dir"		value="doc" />
	<property name="src.dir"		value="src" />
	<property name="build.dir"		value="classes" />
	<property name="install.dir"	value="install" />
	<property name="version"		value="0.9.6.3" />
	<property name="javadoc.dir"	value="javadoc"/>
	<property name="lib.dir"	    value="lib"/>
	<property name="custom.dir"	    value="customserializer/release/MessagePackSerializer"/>

	<!-- Use Project Lib  -->
	<path id="project.class.path">
		<pathelement path = "."/>
		<pathelement path = "classes"/>
		<pathelement path = "lib/commons-codec-1.4.jar"/>
		<pathelement path = "lib/javamail-1.4.1.jar"/>
		<pathelement path = "lib/jetty-6.1.0.jar"/>
		<pathelement path = "lib/jetty-util-6.1.0.jar"/>
		<pathelement path = "lib/log4j-1.2.14.jar"/>
		<pathelement path = "lib/memcached.jar"/>
		<pathelement path = "lib/servlet-api-2.5.jar"/>
		<pathelement path = "lib/servlet-api-2.5.jar"/>
		<pathelement path = "${custom.dir}/javassist-3.4.ga.jar"/>
		<pathelement path = "${custom.dir}/msgpack-0.6.7.jar"/>
		<pathelement path = "${custom.dir}/msgpackserializer.jar"/>
		<pathelement path = "${custom.dir}/slf4j-api-1.6.6.jar"/>
		<pathelement path = "lib/hamcrest-core-1.3.jar" />
		<pathelement path = "lib/junit-4.11.jar" />
	</path>


	<!-- clean Task  -->
	<target name="clean">
		<delete dir="${build.dir}"/>
		<delete dir="okuyama.jar" />
	</target>

	<!-- setup Task  -->
	<target name="setup">
		<mkdir dir="${build.dir}"/>
	</target>

	<!-- compile task  -->
	<target name="compile" depends="clean, setup">
		<javac fork="true" debug="yes" srcdir="${src.dir}" destdir="${build.dir}" encoding="UTF-8" deprecation="true">
			<classpath refid="project.class.path"/>
		</javac>
		<copy todir="${build.dir}">
			<fileset dir="${src.dir}"
				includes="*.properties"
			/>
		</copy>
	</target>


	<!-- jar make task  -->
	<target name="jar" depends="compile">
		<jar compress="yes" jarfile="okuyama-${version}.jar" basedir="${build.dir}" includes="**/*.class" />
		<copy todir="${install.dir}/bin">
			<fileset dir="./" includes="okuyama*.jar" />
		</copy>
	</target>



	<!-- Javadoc-->
	<target name="javadoc" description="Javadoc">
		<echo message="Javadoc"/>
		<delete dir="${javadoc.dir}" />
		<mkdir dir="${javadoc.dir}" />
		<javadoc packagenames="*" sourcepath="${src.dir}" destdir="${javadoc.dir}" encoding="UTF-8" charset="UTF-8">
			<classpath>
				<fileset dir="${lib.dir}">
					<include name="*.jar"/>
				</fileset>
			</classpath>
		</javadoc>
	</target>

	<!-- DataNodeServer Execute task -->
	<target name="datanode">
		<java classname="okuyama.base.JavaMain" fork="true" maxmemory="1280m">
			<arg value="/Main.maindatanode.properties"/>
			<arg value="/DataNode.properties"/>
			<arg value="-lsdn true"/>
			<arg value="-lsdnsdc 400"/>
			<jvmarg value="-XX:+UseConcMarkSweepGC" />
			<jvmarg value="-XX:+CMSParallelRemarkEnabled" />
			<jvmarg value="-XX:+UseParNewGC" />
			<jvmarg value="-XX:CMSInitiatingOccupancyFraction=70" />
			<classpath refid="project.class.path"/>
		</java>
	</target>

	<target name="datanode_small">
		<java classname="okuyama.base.JavaMain" fork="true" maxmemory="512m">
			<arg value="/Main.properties"/>
			<arg value="/DataNode_small.properties"/>
			<arg value=" -s 4096 -vidf false -csf false"/>
			<classpath refid="project.class.path"/>
		</java>
	</target>


	<!-- SlaveDataNodeServer Execute task -->
	<target name="slavedatanode">
		<java classname="okuyama.base.JavaMain" fork="true" maxmemory="1280m">
			<arg value="/Main.slavedatanode.properties"/>
			<arg value="/SlaveDataNode.properties"/>
			<arg value="-lsdn true"/>
			<arg value="-lsdnsdc 400"/>
			<jvmarg value="-XX:+UseConcMarkSweepGC" />
			<jvmarg value="-XX:+CMSParallelRemarkEnabled" />
			<jvmarg value="-XX:+UseParNewGC" />
			<jvmarg value="-XX:CMSInitiatingOccupancyFraction=70" />
			<classpath refid="project.class.path"/>
		</java>
	</target>


	<!-- ThirdDataNodeServer Execute task -->
	<target name="thirddatanode">
		<java classname="okuyama.base.JavaMain" fork="true" maxmemory="1280m">
			<arg value="/Main.thirddatanode.properties"/>
			<arg value="/ThirdDataNode.properties"/>
			<arg value="-lsdn true"/>
			<arg value="-lsdnsdc 400"/>
			<jvmarg value="-XX:+UseConcMarkSweepGC" />
			<jvmarg value="-XX:+CMSParallelRemarkEnabled" />
			<jvmarg value="-XX:+UseParNewGC" />
			<jvmarg value="-XX:CMSInitiatingOccupancyFraction=70" />
			<classpath refid="project.class.path"/>
		</java>
	</target>


	<!-- MasterNodeServer Execute task -->
	<target name="masternode">
		<java classname="okuyama.base.JavaMain" fork="true" maxmemory="512m">
			<arg value="/Main.mainmasternode.properties"/>
			<arg value="/MasterNode.properties"/>
			<classpath refid="project.class.path"/>
		</java>
	</target>

	<target name="masternode_small">
		<java classname="okuyama.base.JavaMain" fork="true" maxmemory="256m">
			<arg value="/Main.properties"/>
			<arg value="/MasterNode_small.properties"/>
			<!--<arg value="-debug" />-->
			<classpath refid="project.class.path"/>
		</java>
	</target>


	<!-- MasterNodeServerForLock Execute task -->
	<target name="masternodelock">
		<java classname="okuyama.base.JavaMain" fork="true" maxmemory="128m">
			<arg value="/Main.properties"/>
			<arg value="/MasterNodeForLock.properties"/>
			<classpath refid="project.class.path"/>
		</java>
	</target>


	<!-- SlaveMasterNodeServer Execute task -->
	<target name="slavemasternode">
		<java classname="okuyama.base.JavaMain" fork="true" maxmemory="128m">
			<arg value="/Main.properties"/>
			<arg value="/MasterNode2.properties"/>
			<classpath refid="project.class.path"/>
		</java>
	</target>


	<!-- MemcachedProtocolMasterNodeServer Execute task -->
	<target name="memcachedmasternode">
		<java classname="okuyama.base.JavaMain" fork="true" maxmemory="128m">
			<arg value="/Main.properties"/>
			<arg value="/MasterNodeMemcached.properties"/>
			<arg value="-gaetu true"/>
			<classpath refid="project.class.path"/>
		</java>
	</target>


	<!-- TransactionNodeServer(LockServer) Execute task -->
	<target name="transactionnode">
		<java classname="okuyama.base.JavaMain" fork="true" maxmemory="128m">
			<arg value="/Main.properties"/>
			<arg value="/TransactionNode.properties"/>
			<classpath refid="project.class.path"/>
		</java>
	</target>


	<!-- OkuyamaWebManagerServer(Web Appl) Execute task -->
	<target name="webmgr">
		<java classname="okuyama.imdst.manager.OkuyamaManagerServer" fork="true" maxmemory="128m">
			<arg value="10088"/>
			<arg value="localhost:8888"/>
			<classpath refid="project.class.path"/>
		</java>
	</target>


	<!-- Set Command Test Execute task -->
	<target name="testset">
		<java classname="TestSock">
			<arg value="1"/>
			<arg value="127.0.0.1"/>
			<arg value="8888"/>
			<arg value="1000"/>
			<classpath refid="project.class.path"/>
		</java>
	</target>

	<target name="set">
		<java classname="TestSock">
			<arg value="1.1"/>
			<arg value="127.0.0.1"/>
			<arg value="8888"/>
			<arg value="${key}"/>
			<arg value="${value}"/>
			<classpath refid="project.class.path"/>
		</java>
		<echo>Set Command End</echo>
	</target>


	<!-- Get Command Test Execute task -->
	<target name="testget">
		<java classname="TestSock">
			<arg value="2"/>
			<arg value="127.0.0.1"/>
			<arg value="8888"/>
			<arg value="1000"/>
			<classpath refid="project.class.path"/>
		</java>

	</target>

	<target name="get">
		<java classname="TestSock">
			<arg value="2.1"/>
			<arg value="127.0.0.1"/>
			<arg value="8888"/>
			<arg value="${key}"/>
			<classpath refid="project.class.path"/>
		</java>
		<echo>Get Command End</echo>
	</target>


	<!-- TagSet Command Test Execute task -->
	<target name="testsettag">
		<java classname="TestSock">
			<arg value="3"/>
			<arg value="127.0.0.1"/>
			<arg value="8888"/>
			<arg value="500"/>
			<classpath refid="project.class.path"/>
		</java>
	</target>


	<!-- TagGet Command Test Execute task -->
	<target name="testgettag">
		<java classname="TestSock">
			<arg value="4"/>
			<arg value="127.0.0.1"/>
			<arg value="8888"/>
			<arg value="1"/>
			<arg value="tag1"/>
			<classpath refid="project.class.path"/>
		</java>
		<java classname="TestSock">
			<arg value="4"/>
			<arg value="127.0.0.1"/>
			<arg value="8888"/>
			<arg value="1"/>
			<arg value="tag2"/>
			<classpath refid="project.class.path"/>
		</java>
		<java classname="TestSock">
			<arg value="4"/>
			<arg value="127.0.0.1"/>
			<arg value="8888"/>
			<arg value="1"/>
			<arg value="tag3"/>
			<classpath refid="project.class.path"/>
		</java>
		<java classname="TestSock">
			<arg value="4"/>
			<arg value="127.0.0.1"/>
			<arg value="8888"/>
			<arg value="1"/>
			<arg value="tag4"/>
			<classpath refid="project.class.path"/>
		</java>
	</target>


	<!-- Remove Command Test Execute task -->
	<target name="testremove">
		<java classname="TestSock">
			<arg value="7"/>
			<arg value="127.0.0.1"/>
			<arg value="8888"/>
			<arg value="500"/>
			<classpath refid="project.class.path"/>
		</java>
	</target>


	<!-- Add Command Test Execute task -->
	<target name="testadd">
		<java classname="TestSock">
			<arg value="11"/>
			<arg value="127.0.0.1"/>
			<arg value="8888"/>
			<arg value="key1"/>
			<arg value="value1"/>
			<classpath refid="project.class.path"/>
		</java>
	</target>


	<!-- JavaScript Command Test Execute task -->
	<target name="testscript">
		<java classname="TestSock">
			<arg value="2.3"/>
			<arg value="127.0.0.1"/>
			<arg value="8888"/>
			<arg value="key1"/>
			<arg value="var dataValue; var dataKey; var retValue = dataValue.replace('value', 'dummy'); if(dataKey == 'key1') {var execRet = '2'} else {var execRet = '1'}"/>
			<classpath refid="project.class.path"/>
		</java>
	</target>


	<!-- Lock Command Test Execute task -->
	<target name="testlock">
		<java classname="TestSock">
			<arg value="10"/>
			<arg value="127.0.0.1"/>
			<arg value="8888"/>
			<arg value="key1"/>
			<arg value="10"/>
			<arg value="5"/>
			<classpath refid="project.class.path"/>
		</java>
	</target>


	<!-- DataNode,MasterNode Execute task -->
	<target name="serverrun">
		<parallel>
			<ant target='datanode_small' />
			<sequential>
				<sleep seconds="6" />
				<ant target='masternode_small' />
			</sequential>
		</parallel>
	</target>


	<!-- DataNode,SlaveDataNode,ThirdDataNode,MasterNode Execute task -->
	<target name="fullserverrun">
		<parallel>
			<ant target='datanode' />
			<ant target='slavedatanode' />
			<ant target='thirddatanode' />
			<sequential>
				<sleep seconds="15" />
				<ant target='masternode' />
			</sequential>
		</parallel>
	</target>

	<!-- Test Run -->
	<target name="testrun">
		<java classname="okuyama.base.JavaMain" fork="true">
			<arg value="/Main.properties"/>
			<arg value="/Test.properties"/>
			<classpath refid="project.class.path"/>
		</java>
	</target>

	<!-- Full Test -->
	<target name="fulltestrun">
		<parallel>
			<ant target="fullserverrun" output="serverrun_result.txt"/>
			<sequential>
				<sleep seconds="30" />
				<ant target='testrun' output="test_result.txt "/>
			</sequential>
		</parallel>
	</target>

	<!-- DataNode,SlaveDataNode,ThirdDataNode Execute task -->
	<target name="datanodesrun" depends="compile">
		<parallel>
			<ant target='datanode' />
			<ant target='slavedatanode' />
			<ant target='thirddatanode' />
		</parallel>
	</target>


	<!-- DataNode,SlaveDataNode,ThirdDataNode,MasterNode,SlaveMasterNode Execute task -->
	<target name="serverrun-slave" depends="compile">
		<parallel>
			<ant target='datanode' />
			<ant target='slavedatanode' />
			<ant target='thirddatanode' />
			<sequential>
				<sleep seconds="12" />
				<ant target='masternode' />
			</sequential>
			<sequential>
				<sleep seconds="12" />
				<ant target='slavemasternode' />
			</sequential>
		</parallel>
	</target>


	<!-- DataNode,SlaveDataNode,ThirdDataNode,MemcachedProtocolMasterNode Execute task -->
	<target name="serverrun-memcached" depends="compile">
		<parallel>
			<ant target='datanode' />
			<ant target='slavedatanode' />
			<ant target='thirddatanode' />
			<sequential>
				<sleep seconds="12" />
				<ant target='masternode' />
			</sequential>
			<sequential>
				<sleep seconds="12" />
				<ant target='memcachedmasternode' />
			</sequential>
		</parallel>
	</target>


	<!-- DataNode,SlaveDataNode,ThirdDataNode,TransactionNode Execute task -->
	<target name="serverrun-transaction" depends="compile">
		<parallel>
			<ant target='datanode' />
			<ant target='slavedatanode' />
			<ant target='thirddatanode' />
			<sequential>
				<sleep seconds="12" />
				<ant target='masternodelock' />
			</sequential>
			<ant target='transactionnode' />
		</parallel>
	</target>


	<!-- DataNode,SlaveDataNode,ThirdDataNode,WebManager Execute task -->
	<target name="serverrun-webmgr" depends="compile">
		<parallel>
			<ant target='datanode' />
			<ant target='slavedatanode' />
			<ant target='thirddatanode' />
			<sequential>
				<sleep seconds="12" />
				<ant target='masternode' />
			</sequential>
			<ant target='webmgr' />
		</parallel>
	</target>

</project>
